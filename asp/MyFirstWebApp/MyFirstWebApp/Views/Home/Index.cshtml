@{
    ViewData["Title"] = "VoiceBill";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    body {
        background: linear-gradient(to right, #e0f7fa, #ffffff);
        font-family: 'Segoe UI', sans-serif;
    }

    .card {
        border-radius: 2rem;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
    }

    .btn {
        padding: 10px 25px;
        border-radius: 1rem;
    }
</style>

<div class="container mt-5">
    <div class="card p-5">
        <h2 class="text-center mb-3 display-6 fw-bold text-primary">🎹 VoiceBill</h2>
        <p class="text-center text-muted">Intelligent Speech-based Billing System (Gemini AI)</p>

        <!-- User Selection -->
        <div class="mb-4">
            <label for="userSelect" class="form-label fw-bold">Select User</label>
            <select class="form-select form-select-lg" id="userSelect">
                <option selected disabled>Choose a user</option>
                <option value="Naveen">Naveen</option>
                <option value="Adhithya">Adhithya</option>
                <option value="Dharshini">Dharshini</option>
                <option value="Rithik">Rithik</option>
            </select>
        </div>

        <!-- Recognized Text Area -->
        <div class="mb-4">
            <label class="form-label fw-bold">Recognized Speech</label>
            <div class="form-control form-control-lg bg-light" id="recognizedText" style="min-height: 100px;">
                🎤 Waiting for speech...
            </div>
        </div>

        <!-- Parsed Items Table -->
        <div class="mb-4">
            <label class="form-label fw-bold">Extracted Bill Items</label>
            <table class="table table-bordered table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Item</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody id="billItems">
                    <tr><td colspan="2" class="text-center text-muted">No items recognized yet.</td></tr>
                </tbody>
            </table>
        </div>

        <!-- Buttons -->
        <div class="d-flex justify-content-center gap-4">
            <button class="btn btn-outline-primary btn-lg" onclick="startListening()">🎧 Start Listening</button>
            <button class="btn btn-success btn-lg" onclick="submitBill()">📤 Submit Bill</button>
        </div>

        <!-- Status Message -->
        <div id="statusMessage" class="alert alert-success mt-4 d-none" role="alert">
            ✅ Bill successfully submitted for <strong id="userLabel">[user]</strong>.
        </div>
    </div>
</div>

<script>
    let recognition;

    function startListening()
    {
        if(!('webkitSpeechRecognition' in window))
        {
            alert("Speech recognition is not supported in this browser. Try using Google Chrome.");
            return;
        }

        recognition = new webkitSpeechRecognition();
        recognition.lang = 'en-IN';
        recognition.interimResults = false;

        recognition.onstart = function()
        {
            document.getElementById("recognizedText").innerText = "🎷 Listening...";
        };

        recognition.onresult = function(event)
        {
            const transcript = event.results[0][0].transcript;
            document.getElementById("recognizedText").innerText = transcript;
            callGeminiAIForItems(transcript);
        };

        recognition.onerror = function()
        {
            document.getElementById("recognizedText").innerText = "❌ Error capturing speech.";
        };

        recognition.start();
    }

    async function callGeminiAIForItems(text)
    {
        const response = await fetch('/Home/AnalyzeSpeechWithGemini', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(text)
        });

        const items = await response.json();
        const tableBody = document.getElementById("billItems");
        tableBody.innerHTML = "";

        if(!items || items.length === 0)
        {
            tableBody.innerHTML = '<tr><td colspan="2" class="text-center text-muted">No valid items found in speech.</td></tr>';
            return;
        }

        items.forEach(item =>
        {
            tableBody.innerHTML += `<tr><td>${item.name}</td><td>${item.quantity}</td></tr>`;
        });
    }

    function submitBill()
    {
        const user = document.getElementById("userSelect").value;
        const text = document.getElementById("recognizedText").innerText;

        if(!user)
        {
            alert("⚠️ Please select a user before submitting.");
            return;
        }

        if(text.includes("Waiting") || text.includes("Error") || text.trim() === '')
        {
            alert("⚠️ Please say something before submitting the bill.");
            return;
        }

        document.getElementById("userLabel").innerText = user;
        document.getElementById("statusMessage").classList.remove("d-none");
    }
</script>
